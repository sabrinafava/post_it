<?php

/**
 * BasePost
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $content
 * @property integer $user_id
 * @property User $User
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $PostCategory
 * 
 * @method string              getContent()      Returns the current record's "content" value
 * @method integer             getUserId()       Returns the current record's "user_id" value
 * @method User                getUser()         Returns the current record's "User" value
 * @method Doctrine_Collection getCategory()     Returns the current record's "Category" collection
 * @method Doctrine_Collection getPostCategory() Returns the current record's "PostCategory" collection
 * @method Post                setContent()      Sets the current record's "content" value
 * @method Post                setUserId()       Sets the current record's "user_id" value
 * @method Post                setUser()         Sets the current record's "User" value
 * @method Post                setCategory()     Sets the current record's "Category" collection
 * @method Post                setPostCategory() Sets the current record's "PostCategory" collection
 * 
 * @package    postit
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BasePost extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('post');
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Category', array(
             'refClass' => 'PostCategory',
             'local' => 'post_id',
             'foreign' => 'category_id'));

        $this->hasMany('PostCategory', array(
             'local' => 'id',
             'foreign' => 'post_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}